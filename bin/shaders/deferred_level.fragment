varying vec3 normal;
varying float height;
varying vec4 vertex_position;

uniform sampler2D baseMap0;
uniform sampler2D baseMap1;
uniform sampler2D baseMap2;
uniform sampler2D baseMap3;

void main()
{
	vec3 n = normalize(normal);
    if(height > 0.4)
        gl_FragData[0] = texture2D(baseMap0, gl_TexCoord[0].st);
    else
        gl_FragData[0] = texture2D(baseMap1, gl_TexCoord[1].st);

    /*
	float weigth0 = 80.0 / (abs(height - 12.0) + 0.01);
	float weigth1 = 80.0 / (abs(height - 20.0) + 0.01);
	float weigth2 = 80.0 / (abs(height - 35.0) + 0.01);
	float weigth3 = 0.0;

	vec4 texture_color = vec4(0, 0, 0, 0);
	texture_color += weigth0 * texture2D(baseMap0, gl_TexCoord[0].st);
	texture_color += weigth1 * texture2D(baseMap1, gl_TexCoord[1].st);
	texture_color += weigth2 * texture2D(baseMap2, gl_TexCoord[2].st);
	texture_color += weigth3 * texture2D(baseMap3, gl_TexCoord[3].st);
	texture_color /= (weigth0 + weigth1 + weigth2 + weigth3);
    */
	n = n * 0.5 + 0.5;

	// gl_FragData[0] = texture_color;
	gl_FragData[1] = vec4(n, 1.0);
    //	gl_FragData[2] = vertex_position;
}

