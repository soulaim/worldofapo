varying vec3 normal;
varying float height;
varying vec4 vertex_position;

uniform float time;

void main()
{
	normal = normalize(gl_NormalMatrix * gl_Normal);
	vertex_position = gl_Vertex;

	height = gl_Vertex.y;
	vec4 v = gl_Vertex;
	vec4 v2 = gl_ModelViewMatrix * v;
	float dist = length(v2);
	float phase = time / 10000000.0;

	float angle = 3.1415 / 1.7 * sin(phase * 5);
	angle *= clamp(dist / 50, 0, 1);
	mat4 rotationMatrix =
		mat4(cos(angle), -sin(angle), 0.0, 0.0,
			 sin(angle), cos(angle), 0.0, 0.0,
			 0.0, 0.0, 1.0, 0.0,
			 0.0, 0.0, 0.0, 1.0);
	// Effect 1 a
	v2.y -= dist / 1.5;
	// Effect 1 b
//	v2.y -= dist * dist / 40 / 1.5 / 1.5;

	// Effect 2
	v2.y += sin(phase / 10 * v.x * v.z / 1000 / 1.5) / 2;

	// Effect 3
	v2 = rotationMatrix * v2;

	gl_TexCoord[0] = gl_MultiTexCoord0 * 2.0;
	gl_TexCoord[1] = gl_MultiTexCoord0 * 3.0;
	gl_Position    = ftransform();
	gl_Position    = gl_ProjectionMatrix * v2;
}

