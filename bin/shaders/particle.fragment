
uniform sampler2D particleTexture;
uniform sampler2D depthTexture;

uniform float screen_width;
uniform float screen_height;

varying vec2 texcoord;

float LinearizeDepth(float z)
{
	float n = 1.0; // camera z near
	float f = 200.0; // camera z far
	return (2.0 * n) / (f + n - z * (f - n));
}

void main()
{
	//texcoord = (texcoord - 0.5) * 2.0;
	//float sqrdist = max(1.0 - (texcoord.x * texcoord.x) + (texcoord.y * texcoord.y), 0.0);
	//gl_FragColor = vec4(sqrdist) * gl_Color;
	
	gl_FragColor = texture2D(particleTexture, texcoord) * gl_Color;
	
	vec2 depthtexcoord = gl_FragCoord.xy / vec2(screen_width, screen_height);
	float screen_z = texture2D(depthTexture, depthtexcoord).r;
	float particle_z = gl_FragCoord.z;
	
	float z1 = LinearizeDepth(screen_z);
	float z2 = LinearizeDepth(particle_z);
	float z  = z1 - z2;
	
	float scale = 20.0;
	float fade = clamp(z * scale, 0.0, 1.0);
	gl_FragColor.a *= fade;
}

