
uniform sampler2D particleTexture;
uniform sampler2D depthTexture;

uniform float screen_width;
uniform float screen_height;

varying vec2 texcoord;

uniform float near;
uniform float far;

float LinearizeDepth(float z)
{
	return (2.0 * near) / (far + near - z * (far - near));
}

void main()
{
	gl_FragColor = texture2D(particleTexture, texcoord) * gl_Color + vec4(1.0, 1.0, 1.0, 1.0);

	vec2 depthtexcoord = gl_FragCoord.xy / vec2(screen_width, screen_height);
	float screen_z = texture2D(depthTexture, depthtexcoord).r;
	float particle_z = gl_FragCoord.z;

	float z1 = LinearizeDepth(screen_z);
	float z2 = LinearizeDepth(particle_z);
	float z  = z1 - z2;

	float scale = 20.0;
	float fade = clamp(z * scale, 0.0, 1.0);
    fade += 1.0f;

    gl_FragColor.a *= fade;
}

