
uniform sampler2D particleTexture;
uniform sampler2D depthTexture;

uniform float width;
uniform float height;

varying vec2 texcoord;

float LinearizeDepth(float z)
{
	float n = 1.0; // camera z near
	float f = 200.0; // camera z far
	return (2.0 * n) / (f + n - z * (f - n));
}

void main()
{
	gl_FragColor = texture2D(particleTexture, texcoord) * gl_Color;


	vec2 depthtexcoord = vec2(gl_FragCoord.x / width, gl_FragCoord.y / height);
	float screen_z = texture2D(depthTexture, depthtexcoord).r;
	float particle_z = gl_FragCoord.z;
	
	float z1 = LinearizeDepth(screen_z);
	float z2 = LinearizeDepth(particle_z);
	float z = z1 - z2;

	float scale = 20.0;
	float fade = clamp(z * scale, 0.0, 1.0);
	gl_FragColor.a *= fade;

}

