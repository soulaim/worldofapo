const int MAX_LIGHTS = 71;
uniform vec4 lights[MAX_LIGHTS * 2];
const int POSITION = 0;
const int DIFFUSE = 1;

uniform float activeLight;

uniform sampler2D texture_colors;
uniform sampler2D normals;
uniform sampler2D positions;

const int MAX_ACTIVE_LIGHTS = 4;

uniform float screen_width;
uniform float screen_height;

varying vec2 texcoord;

void main()
{
	vec2 real_texcoord = gl_FragCoord.xy / vec2(screen_width, screen_height);

	vec4 light_color = vec4(0,0,0,1);
	vec4 texture_color = texture2D(texture_colors, real_texcoord);
	vec3 n = normalize(texture2D(normals, real_texcoord).rgb);
	vec4 ecPos = texture2D(positions, real_texcoord);

	int lightIndex = int(activeLight);

	vec4 dif = lights[lightIndex*2 + DIFFUSE];
	vec4 pos = lights[lightIndex*2 + POSITION];

	vec3 aux = vec3(gl_ModelViewMatrix * (pos - ecPos));

	float dist = length(aux);
	vec3 lightDir = normalize(aux);

	float NdotL = dot(n, normalize(lightDir));
	
	if(NdotL > 0.0)
	{
		float att = 1.0 / (0.0001 + 0.0006 * dist * dist);
		light_color += dif * NdotL * att;
	}

	gl_FragColor = texture_color * light_color;
}

